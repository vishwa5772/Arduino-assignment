# Prerequisites
*.d

# Object files
*.o
*.ko
*.obj
*.elf

# Linker output
*.ilk
*.map
*.exp

# Precompiled Headers
*.gch
*.pch

# Libraries
*.lib
*.a
*.la
*.lo

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex

# Debug files
*.dSYM/
*.su
*.idb
*.pdb

# Kernel Module Compile Results
*.mod*
*.cmd
.tmp_versions/
modules.order
Module.symvers
Mkfile.old
dkms.conf
#include <elapsedMillis.h>

const int lm35Pin = A0;
const int ledPin = 13;

const int below30Interval = 250;
const int above30Interval = 500;

elapsedMillis ledTimer;

void setup() {
  pinMode(ledPin, OUTPUT);
  Serial.begin(9600);
}

void loop() {
  int sensorValue = analogRead(lm35Pin);

  float temperatureC = (sensorValue * 5.0 / 1024.0) * 100.0;

  Serial.print("Temperature: ");
  Serial.print(temperatureC);
  Serial.println(" C");

  if (temperatureC < 30.0) {
    blinkLED(below30Interval);
  } else if (temperatureC > 30.0) {
    blinkLED(above30Interval); 
  }
}

void blinkLED(int interval) {
  if (ledTimer >= interval) {
    digitalWrite(ledPin, !digitalRead(ledPin));
    ledTimer = 0;
  }
}

